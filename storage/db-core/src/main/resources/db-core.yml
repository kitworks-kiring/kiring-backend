spring:
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate.default_batch_fetch_size: 100

mybatis:
  # XML 매퍼 파일의 위치를 지정합니다. (매우 중요)
  # 클래스패스 기준으로 여러 경로를 지정할 수 있습니다.
  mapper-locations: classpath:/mappers/**/*.xml # src/main/resources/mappers 폴더 아래 모든 xml 파일
  # 또는 특정 파일 지정: classpath:/mappers/YourEntityMapper.xml, classpath:/mappers/AnotherMapper.xml
  # (선택) DTO 클래스들의 패키지를 지정하여 XML에서 짧은 별칭으로 사용할 수 있게 합니다.
#  type-aliases-package: com.kiring.dto # 실제 DTO 패키지 경로로 변경
  # (선택) MyBatis의 전역 설정을 변경할 수 있습니다.
  configuration:
    map-underscore-to-camel-case: true # DB 컬럼의 스네이크 케이스(예: user_id)를 자바 객체의 카멜 케이스(예: userId)로 자동 매핑
      # call-setters-on-nulls: true
      # jdbc-type-for-null: 'NULL' # NULL 값 전달 시 JDBC 타입 명시 (보통 VARCHAR)
      # default-fetch-size: 100
      # default-statement-timeout: 30 # 초 단위
      # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # MyBatis 내부 SQL 로깅 (개발 시 유용)

---
spring.config.activate.on-profile: local

spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        geometry_factory: org.hibernate.spatial.integration.jts.JtsGeometryFactory
        format_sql: true
        show_sql: true
  h2:
    console:
      enabled: true

storage:
  datasource:
    core:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${storage.database.core-db.url}?serverTimezone=Asia/Seoul
      username: ${storage.database.core-db.username}
      password: ${storage.database.core-db.password}
      maximum-pool-size: 5
      connection-timeout: 30000
      keepalive-time: 30000
      validation-timeout: 5000
      max-lifetime: 600000
      pool-name: core-db-pool
      data-source-properties:
        socketTimeout: 3000
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false

#storage:
#  datasource:
#    core:
#      driver-class-name: org.h2.Driver
#      jdbc-url: jdbc:h2:mem:core;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#      username: sa
#      pool-name: core-db-pool
#      data-source-properties:
#        rewriteBatchedStatements: true

---
spring.config.activate.on-profile: local-dev

spring:
  jpa:
    properties:
      hibernate:
        format_sql: true
        show_sql: true

storage:
  datasource:
    core:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${DB_HOST}?serverTimezone=Asia/Seoul
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      maximum-pool-size: 5
      connection-timeout: 30000
      keepalive-time: 30000
      validation-timeout: 5000
      max-lifetime: 600000
      pool-name: core-db-pool
      data-source-properties:
        socketTimeout: 3000
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
---
spring.config.activate.on-profile: dev

storage:
  datasource:
    core:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${DB_HOST}?serverTimezone=Asia/Seoul
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      maximum-pool-size: 5
      connection-timeout: 30000
      keepalive-time: 30000
      validation-timeout: 5000
      max-lifetime: 600000
      pool-name: core-db-pool
      data-source-properties:
        socketTimeout: 3000
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false

---
spring.config.activate.on-profile: staging

storage:
  datasource:
    core:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${storage.database.core-db.url}?serverTimezone=Asia/Seoul
      username: ${storage.database.core-db.username}
      password: ${storage.database.core-db.password}
      maximum-pool-size: 5
      connection-timeout: 1100
      keepalive-time: 30000
      validation-timeout: 1000
      max-lifetime: 600000
      pool-name: core-db-pool
      data-source-properties:
        socketTimeout: 3000
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false

---
spring.config.activate.on-profile: live

storage:
  datasource:
    core:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://${storage.database.core-db.url}?serverTimezone=Asia/Seoul
      username: ${storage.database.core-db.username}
      password: ${storage.database.core-db.password}
      maximum-pool-size: 25
      connection-timeout: 1100
      keepalive-time: 30000
      validation-timeout: 1000
      max-lifetime: 600000
      pool-name: core-db-pool
      data-source-properties:
        socketTimeout: 3000
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false