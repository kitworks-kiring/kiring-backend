# .github/workflows/ci-dev.yml

name: Deploy Spring Boot App to EC2 (for Development Branch) # 워크플로우 이름 변경

on:
  push:
    branches: [ "server_develop" ]

jobs:
  build-and-push-to-dockerhub-dev: # Job 이름 변경
    name: Build and Push Dev Image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Define Dev Image Name and Tag
        id: define_image_vars
        run: |
          IMAGE_NAME="xoals6536/kiring-api"
          IMAGE_TAG="dev" 
          echo "DOCKER_IMAGE_NAME_WITH_TAG=${IMAGE_NAME}:${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Build and push Jib image to Docker Hub for Dev
        run: |
          echo "Building and pushing image: ${{ env.DOCKER_IMAGE_NAME_WITH_TAG }}"
          ./gradlew :core:core-api:jib \
            -Djib.to.image=${{ env.DOCKER_IMAGE_NAME_WITH_TAG }} \
            -Djib.container.environment=SPRING_PROFILES_ACTIVE=dev

  deploy-to-ec2-dev:
    name: Deploy to EC2 for Development
    needs: build-and-push-to-dockerhub-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/server_develop' # 브랜치 이름은 현재 상황에 맞게 수정

    steps:
      - name: Deploy Dev instance to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            
            IMAGE_TO_PULL="${{ needs.build-and-push-to-dockerhub-dev.outputs.DOCKER_IMAGE_NAME_WITH_TAG }}"
            
            echo "Pulling latest dev image from Docker Hub: $IMAGE_TO_PULL"
            
            sudo docker pull $IMAGE_TO_PULL
            
            echo "Stopping and removing old dev container (if exists)"
            sudo docker stop kiring-app-dev || true
            sudo docker rm kiring-app-dev || true
            
            echo "Running new dev container..."
            sudo docker run -d \
              -p 8081:8080 \
              --name kiring-app-dev \
              --network kiring-net \
              -e SPRING_PROFILES_ACTIVE=dev \
              -e SPRING_DATA_REDIS_HOST=kiring-redis \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -v /home/ubuntu/kiring-api/logs-dev:/app/logs \
              -e TZ=Asia/Seoul \
              --restart unless-stopped \
              $IMAGE_TO_PULL 
            
            echo "Cleaning up old Docker images (optional)"
            sudo docker image prune -af